@using Projekt.NETWeb.Models
@model WallViewModel
@{
	ViewBag.Title = "";
	Layout = "~/Views/Shared/_LayoutMain.cshtml";
}

<div class="col-md-2">
	<p>
		<h1>Lewo</h1>
		ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
		enables a clean separation of concerns and gives you full control over markup
		for enjoyable, agile development.ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
		enables a clean separation of concerns and gives you full control over markup
		for enjoyable, agile development.ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
		enables a clean separation of concerns and gives you full control over markup
		for enjoyable, agile development.ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
		enables a clean separation of concerns and gives you full control over markup
		for enjoyable, agile development.
	</p>
</div>
<div class="col-md-8">
	@if (ViewBag.IsAdmin == "Yes")
	{
		<h1>Welcome Admin. You are an Admin</h1>
		<h3>
			<li>@Html.ActionLink("Admin Page", "Index", "Admin")</li>
		</h3>
	}
	<div class="createpost">
		@using (Html.BeginForm("Action", "Controller", FormMethod.Get))
		{
			<div class="postAddTextBox">
				<input type="text" placeholder="Write something..." maxlength="1000" style="width: 70%; height: 60px">
			</div>
			<div class="SubmitPostAddButton">
				<input type="submit" value="Submit" class="btn btn-success">
			</div>
		}
	</div>
	@if (Model.TotalCount > 0)
	{
		foreach (var post in Model.Posts)
		{
			Html.RenderPartial("_Post", post);
		}
	}
	else
	{
		<p>
			There is nothing here yet<br />
			Go and add something!
		</p>
	}
</div>
<div class="col-md-2">
	<p>
		<h1>Prawo</h1>
		ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
		enables a clean separation of concerns and gives you full control over markup
		for enjoyable, agile development.ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
		enables a clean separation of concerns and gives you full control over markup
		for enjoyable, agile development.ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
		enables a clean separation of concerns and gives you full control over markup
		for enjoyable, agile development.ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
		enables a clean separation of concerns and gives you full control over markup
		for enjoyable, agile development.
	</p>
</div>